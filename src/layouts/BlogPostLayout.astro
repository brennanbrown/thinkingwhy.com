---
// src/layouts/BlogPostLayout.astro
import BaseLayout from './BaseLayout.astro';
import TableOfContents from '../components/content/TableOfContents.astro';
import ReadingTime from '../components/content/ReadingTime.astro';
import AuthorBox from '../components/content/AuthorBox.astro';
import RelatedPosts from '../components/content/RelatedPosts.astro';
import ArticleSchema from '../components/seo/ArticleSchema.astro';
import FAQSchema from '../components/seo/FAQSchema.astro';
import BreadcrumbSchema from '../components/seo/BreadcrumbSchema.astro';
import { getCollection } from 'astro:content';

interface Props {
  post: any;
  content?: string;
  related?: any[];
}

const { post, content = '', related = [] } = Astro.props as Props;
const { data } = post;

const url = Astro.url?.href || '';
let authorObj = typeof data.author === 'string' ? { name: data.author } : (data.author || {});
const hero = typeof data.heroImage === 'string' ? { src: data.heroImage, alt: data.title } : (data.heroImage || {});

// Try to enrich author from authors collection when bio/image/links are missing
if (!authorObj.bio || !authorObj.image || !authorObj.socialLinks) {
  const authors = await getCollection('authors');
  const byName = authors.find(a => a.data.name?.toLowerCase() === (authorObj.name || '').toLowerCase());
  if (byName) {
    authorObj = {
      ...byName.data,
      ...authorObj
    };
  }
}
---

<BaseLayout title={data.title} description={data.description} ogImage={hero?.src}>
  <ArticleSchema post={data} url={url} />
  {data.faq && <FAQSchema faqs={data.faq} />}
  <BreadcrumbSchema items={[
    { name: 'Home', url: '/' },
    { name: data.category, url: `/${(data.category || '').toLowerCase().replace(/[^a-z0-9\s-]/g,'').replace(/\s+/g,'-')}/` },
    { name: data.title, url }
  ]} />

  <article class="prose mx-auto max-w-3xl dark:prose-invert">
    <header class="mb-8 border-b border-slate-200 dark:border-slate-800 pb-5">
      <h1 class="mb-2 text-4xl font-bold text-slate-900">{data.title}</h1>
      <div class="mb-3 flex flex-wrap items-center gap-3 text-sm text-slate-600 dark:text-slate-400">
        <time datetime={new Date(data.pubDate).toISOString()}>{new Date(data.pubDate).toLocaleDateString()}</time>
        <span>â€¢</span>
        <ReadingTime content={content} />
      </div>
      {hero?.src && (
        <img
          src={hero.src}
          alt={hero.alt}
          class="mb-6 h-80 w-full rounded-lg object-cover"
          decoding="async"
          onerror="this.remove()"
        />
      )}
    </header>

    {data.tableOfContents && <TableOfContents content={content} />}

    <slot />

    <section class="mt-10">
      <AuthorBox author={authorObj} />
    </section>

    {related && related.length > 0 && (
      <section class="mt-10">
        <RelatedPosts posts={related} />
      </section>
    )}
  </article>
</BaseLayout>
