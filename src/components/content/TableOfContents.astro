---
interface Props {
  content?: string;
  headings?: Array<{ depth: number; text: string; id: string }>;
}

const { content, headings } = Astro.props as Props;

const headingRegex = /^(#{2,3})\s+(.*)$/gm;
const matches: Array<{ depth: number; text: string; id: string }> = [];
let match;

const toSlug = (value: string) =>
  value
    .toLowerCase()
    .trim()
    .replace(/[^a-z0-9\s-]/g, '')
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-');

if (headings && headings.length) {
  matches.push(...headings);
} else if (content) {
  while ((match = headingRegex.exec(content)) !== null) {
    const depth = match[1].length - 1;
    const text = match[2].trim();
    const id = toSlug(text);
    matches.push({ depth, text, id });
  }
}
---

{matches.length > 0 && (
  <nav aria-label="Table of contents" class="mb-8 rounded-md border p-4 border-slate-200 bg-white text-slate-700 dark:border-slate-800 dark:bg-slate-900/40 dark:text-slate-300">
    <h2 class="text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400">On this page</h2>
    <ol class="mt-3 space-y-1.5 text-sm">
      {matches.map((item) => (
        <li style={`padding-left: ${item.depth * 1.25}rem`}>
          <a href={`#${item.id}`} class="transition hover:text-slate-900 dark:hover:text-white">
            {item.text}
          </a>
        </li>
      ))}
    </ol>
  </nav>
)}
